#!/bin/sh
set -e

has_builtin() {
    [ "$(command -v "$1")" = "$1" ]
}

main() {
    local type bin key0 value0 key1 value1

    findBinary() {
        type=$(echo ${type:-c} | cut -c1)
        bin=$(which "kcp${type}")
        if has_builtin $bin; then return; fi

        echo "no kcp${type} found" >&2
        exit 1
    }

    setHosts() {
        type=$(echo ${type:-c} | cut -c1)
        setAddr() {
            local value="$3:$4"
            case "$3" in "["*) ;; *":"*) value="[$3]:$4";; esac
            eval "key$1=\"--\$2\""
            eval "value$1=\"\$value\""
        }
        if [ "$type" = "client" -o "$type" = 'c' ]; then
            setAddr 0 localaddr "${1:-127.0.0.1}" "${2:-12948}"
            setAddr 1 remoteaddr "${3:-vps}" "${4:-29900}"
        else
            setAddr 0 listen "$3" "${4:-29900}"
            setAddr 1 target "${1:-127.0.0.1}" "${2:-12948}"
        fi
    }

    parseAndExecute() {
        local ch offset result

        nextToken() {
            result=
            while true; do
                offset=$((offset+1))
                ch=$(echo -n ${1} | cut -c$((offset+1)))
                [ -n "$ch" ] || break
                case "$2" in *"$ch"*) break;; esac
                result="$result$ch"
            done
        }

        local opts="$SS_PLUGIN_OPTIONS"
        if [ -n "$opts" ]; then
            local len="$#"
            offset=-1
            while true; do
                nextToken "$opts" "=;"
                if [ -z "$result" ]; then
                    echo "empty key in $opts" >&2
                    exit 1
                fi
                if [ "$result" = "client" -o "$result" = "c" ]; then
                    type='client'
                    continue
                fi
                if [ "$result" = "server" -o "$result" = "s" ]; then
                    type='server'
                    continue
                fi
                set -- "$@" "--$result"
                if [ "$ch" = "=" ]; then
                    nextToken "$opts" ";"
                    set -- "$@=$result"
                fi
                [ -n "$ch" ] || break
            done

            # rotate the arguments
            while [ "$len" -gt 0 ]; do
                len=$((len-1))
                set -- "$@=$1"
                shift
            done
        fi

        findBinary
        setHosts "$SS_LOCAL_HOST" "$SS_LOCAL_PORT" "$SS_REMOTE_HOST" "$SS_REMOTE_PORT"
        echo "#" "$bin" "$key0=$value0" "$key1=$value1" "$@"

        [ "V$(find /var/run -name '*-plugin')" != "V" ] && {
            echo "$bin" | tee -a $(find /var/run -name '*-plugin')
        }

        unset SS_LOCAL_HOST SS_LOCAL_PORT SS_REMOTE_HOST SS_REMOTE_PORT SS_PLUGIN_OPTIONS
        exec "$bin" "$key0=$value0" "$key1=$value1" "$@"
    }

    parseAndExecute "$@"
}

[ "x${1-}" != x--fast-open ] || {
    echo "skip unsupported option \"$1\"" >&2
    shift
}
main "$@"
